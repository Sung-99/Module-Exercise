vendor_name = ModelSim
source_file = 1, E:/Prog Area/MIPS Asembly/QuartusProject/Quartus/Test6/ULA.v
source_file = 1, E:/Prog Area/MIPS Asembly/QuartusProject/Quartus/Test6/db/ULA.cbx.xml
source_file = 1, E:/Prog Area/MIPS Asembly/QuartusProject/Quartus/Test6/somadorcompleto.v
design_name = ULA
instance = comp, \Mux14~0 , Mux14~0, ULA, 1
instance = comp, \Mux10~0 , Mux10~0, ULA, 1
instance = comp, \arith_unit|adder_bits[5].adder|C_out~0 , arith_unit|adder_bits[5].adder|C_out~0, ULA, 1
instance = comp, \Mux8~0 , Mux8~0, ULA, 1
instance = comp, \arith_unit|adder_bits[7].adder|C_out~0 , arith_unit|adder_bits[7].adder|C_out~0, ULA, 1
instance = comp, \Mux6~0 , Mux6~0, ULA, 1
instance = comp, \arith_unit|adder_bits[11].adder|C_out~0 , arith_unit|adder_bits[11].adder|C_out~0, ULA, 1
instance = comp, \arith_unit|adder_bits[13].adder|C_out~0 , arith_unit|adder_bits[13].adder|C_out~0, ULA, 1
instance = comp, \Mux0~0 , Mux0~0, ULA, 1
instance = comp, \Equal2~1 , Equal2~1, ULA, 1
instance = comp, \A[5]~I , A[5], ULA, 1
instance = comp, \B[5]~I , B[5], ULA, 1
instance = comp, \A[7]~I , A[7], ULA, 1
instance = comp, \B[7]~I , B[7], ULA, 1
instance = comp, \B[9]~I , B[9], ULA, 1
instance = comp, \B[11]~I , B[11], ULA, 1
instance = comp, \B[13]~I , B[13], ULA, 1
instance = comp, \A[15]~I , A[15], ULA, 1
instance = comp, \clock~I , clock, ULA, 1
instance = comp, \clock~clkctrl , clock~clkctrl, ULA, 1
instance = comp, \ALUControl[1]~I , ALUControl[1], ULA, 1
instance = comp, \B[0]~I , B[0], ULA, 1
instance = comp, \ALUControl[0]~I , ALUControl[0], ULA, 1
instance = comp, \Mux15~0 , Mux15~0, ULA, 1
instance = comp, \ALUControl[2]~I , ALUControl[2], ULA, 1
instance = comp, \Result[0]~reg0 , Result[0]~reg0, ULA, 1
instance = comp, \A[1]~I , A[1], ULA, 1
instance = comp, \B[1]~I , B[1], ULA, 1
instance = comp, \Mux14~1 , Mux14~1, ULA, 1
instance = comp, \Mux14~2 , Mux14~2, ULA, 1
instance = comp, \Result[1]~reg0 , Result[1]~reg0, ULA, 1
instance = comp, \Equal0~0 , Equal0~0, ULA, 1
instance = comp, \A[0]~I , A[0], ULA, 1
instance = comp, \arith_unit|adder_bits[1].adder|C_out~0 , arith_unit|adder_bits[1].adder|C_out~0, ULA, 1
instance = comp, \arith_unit|adder_bits[1].adder|C_out~1 , arith_unit|adder_bits[1].adder|C_out~1, ULA, 1
instance = comp, \B[2]~I , B[2], ULA, 1
instance = comp, \A[2]~I , A[2], ULA, 1
instance = comp, \Mux13~0 , Mux13~0, ULA, 1
instance = comp, \Mux13~1 , Mux13~1, ULA, 1
instance = comp, \Result[2]~reg0 , Result[2]~reg0, ULA, 1
instance = comp, \B[3]~I , B[3], ULA, 1
instance = comp, \A[3]~I , A[3], ULA, 1
instance = comp, \Mux12~0 , Mux12~0, ULA, 1
instance = comp, \Mux12~1 , Mux12~1, ULA, 1
instance = comp, \Result[3]~reg0 , Result[3]~reg0, ULA, 1
instance = comp, \arith_unit|adder_bits[2].adder|C_out~0 , arith_unit|adder_bits[2].adder|C_out~0, ULA, 1
instance = comp, \arith_unit|adder_bits[3].adder|C_out~0 , arith_unit|adder_bits[3].adder|C_out~0, ULA, 1
instance = comp, \A[4]~I , A[4], ULA, 1
instance = comp, \B[4]~I , B[4], ULA, 1
instance = comp, \Mux11~0 , Mux11~0, ULA, 1
instance = comp, \Mux11~1 , Mux11~1, ULA, 1
instance = comp, \Result[4]~reg0 , Result[4]~reg0, ULA, 1
instance = comp, \arith_unit|adder_bits[4].adder|C_out~0 , arith_unit|adder_bits[4].adder|C_out~0, ULA, 1
instance = comp, \Mux10~1 , Mux10~1, ULA, 1
instance = comp, \Result[5]~reg0 , Result[5]~reg0, ULA, 1
instance = comp, \A[6]~I , A[6], ULA, 1
instance = comp, \B[6]~I , B[6], ULA, 1
instance = comp, \Mux9~0 , Mux9~0, ULA, 1
instance = comp, \Mux9~1 , Mux9~1, ULA, 1
instance = comp, \Result[6]~reg0 , Result[6]~reg0, ULA, 1
instance = comp, \arith_unit|adder_bits[6].adder|C_out~0 , arith_unit|adder_bits[6].adder|C_out~0, ULA, 1
instance = comp, \Mux8~1 , Mux8~1, ULA, 1
instance = comp, \Result[7]~reg0 , Result[7]~reg0, ULA, 1
instance = comp, \B[8]~I , B[8], ULA, 1
instance = comp, \Mux7~0 , Mux7~0, ULA, 1
instance = comp, \Mux7~1 , Mux7~1, ULA, 1
instance = comp, \Result[8]~reg0 , Result[8]~reg0, ULA, 1
instance = comp, \A[8]~I , A[8], ULA, 1
instance = comp, \arith_unit|adder_bits[8].adder|C_out~0 , arith_unit|adder_bits[8].adder|C_out~0, ULA, 1
instance = comp, \Mux6~1 , Mux6~1, ULA, 1
instance = comp, \Result[9]~reg0 , Result[9]~reg0, ULA, 1
instance = comp, \A[10]~I , A[10], ULA, 1
instance = comp, \B[10]~I , B[10], ULA, 1
instance = comp, \Mux5~0 , Mux5~0, ULA, 1
instance = comp, \Mux5~1 , Mux5~1, ULA, 1
instance = comp, \Result[10]~reg0 , Result[10]~reg0, ULA, 1
instance = comp, \A[11]~I , A[11], ULA, 1
instance = comp, \Mux4~0 , Mux4~0, ULA, 1
instance = comp, \A[9]~I , A[9], ULA, 1
instance = comp, \arith_unit|adder_bits[9].adder|C_out~0 , arith_unit|adder_bits[9].adder|C_out~0, ULA, 1
instance = comp, \arith_unit|adder_bits[10].adder|C_out~0 , arith_unit|adder_bits[10].adder|C_out~0, ULA, 1
instance = comp, \Mux4~1 , Mux4~1, ULA, 1
instance = comp, \Result[11]~reg0 , Result[11]~reg0, ULA, 1
instance = comp, \B[12]~I , B[12], ULA, 1
instance = comp, \Mux3~0 , Mux3~0, ULA, 1
instance = comp, \Mux3~1 , Mux3~1, ULA, 1
instance = comp, \Result[12]~reg0 , Result[12]~reg0, ULA, 1
instance = comp, \A[12]~I , A[12], ULA, 1
instance = comp, \arith_unit|adder_bits[12].adder|C_out~0 , arith_unit|adder_bits[12].adder|C_out~0, ULA, 1
instance = comp, \A[13]~I , A[13], ULA, 1
instance = comp, \Mux2~0 , Mux2~0, ULA, 1
instance = comp, \Mux2~1 , Mux2~1, ULA, 1
instance = comp, \Result[13]~reg0 , Result[13]~reg0, ULA, 1
instance = comp, \A[14]~I , A[14], ULA, 1
instance = comp, \B[14]~I , B[14], ULA, 1
instance = comp, \Mux1~0 , Mux1~0, ULA, 1
instance = comp, \Mux1~1 , Mux1~1, ULA, 1
instance = comp, \Result[14]~reg0 , Result[14]~reg0, ULA, 1
instance = comp, \arith_unit|adder_bits[14].adder|C_out~0 , arith_unit|adder_bits[14].adder|C_out~0, ULA, 1
instance = comp, \B[15]~I , B[15], ULA, 1
instance = comp, \arith_unit|Overflow~2 , arith_unit|Overflow~2, ULA, 1
instance = comp, \Mux0~1 , Mux0~1, ULA, 1
instance = comp, \Result[15]~reg0 , Result[15]~reg0, ULA, 1
instance = comp, \Equal2~0 , Equal2~0, ULA, 1
instance = comp, \Equal2~3 , Equal2~3, ULA, 1
instance = comp, \Equal2~2 , Equal2~2, ULA, 1
instance = comp, \Equal2~4 , Equal2~4, ULA, 1
instance = comp, \Zero~reg0 , Zero~reg0, ULA, 1
instance = comp, \arith_unit|Overflow , arith_unit|Overflow, ULA, 1
instance = comp, \Overflow~reg0 , Overflow~reg0, ULA, 1
instance = comp, \arith_unit|SLT_out~0 , arith_unit|SLT_out~0, ULA, 1
instance = comp, \arith_unit|SLT_out~1 , arith_unit|SLT_out~1, ULA, 1
instance = comp, \SLT_out~reg0 , SLT_out~reg0, ULA, 1
instance = comp, \Result[0]~I , Result[0], ULA, 1
instance = comp, \Result[1]~I , Result[1], ULA, 1
instance = comp, \Result[2]~I , Result[2], ULA, 1
instance = comp, \Result[3]~I , Result[3], ULA, 1
instance = comp, \Result[4]~I , Result[4], ULA, 1
instance = comp, \Result[5]~I , Result[5], ULA, 1
instance = comp, \Result[6]~I , Result[6], ULA, 1
instance = comp, \Result[7]~I , Result[7], ULA, 1
instance = comp, \Result[8]~I , Result[8], ULA, 1
instance = comp, \Result[9]~I , Result[9], ULA, 1
instance = comp, \Result[10]~I , Result[10], ULA, 1
instance = comp, \Result[11]~I , Result[11], ULA, 1
instance = comp, \Result[12]~I , Result[12], ULA, 1
instance = comp, \Result[13]~I , Result[13], ULA, 1
instance = comp, \Result[14]~I , Result[14], ULA, 1
instance = comp, \Result[15]~I , Result[15], ULA, 1
instance = comp, \Zero~I , Zero, ULA, 1
instance = comp, \Overflow~I , Overflow, ULA, 1
instance = comp, \SLT_out~I , SLT_out, ULA, 1
